diff --git a/src/reader.cpp b/src/reader.cpp
index 2bbe581..004d5e3 100644
--- a/src/reader.cpp
+++ b/src/reader.cpp
@@ -383,7 +383,7 @@ bool Reader::searchSuggestionsSmart(const string& prefix,
 
   auto suggestionSearcher = zim::Searcher(*zimArchive);
   zim::Query suggestionQuery;
-  suggestionQuery.setQuery(prefix, true);
+  suggestionQuery.setQuery(prefix);
   auto suggestionSearch = suggestionSearcher.search(suggestionQuery);
 
   if (suggestionSearch.getEstimatedMatches()) {
diff --git a/src/searcher.cpp b/src/searcher.cpp
index 1d0b492..5be93db 100644
--- a/src/searcher.cpp
+++ b/src/searcher.cpp
@@ -120,8 +120,7 @@ void Searcher::search(const std::string& search,
     }
     zim::Searcher searcher(archives);
     zim::Query query;
-    query.setQuery(unaccentedSearch, false);
-    query.setVerbose(verbose);
+    query.setQuery(unaccentedSearch);
     zim::Search search = searcher.search(query);
     internal.reset(new SearcherInternal(search.getResults(resultStart, maxResultCount)));
     this->estimatedResultCount = search.getEstimatedMatches();
@@ -161,8 +160,7 @@ void Searcher::geo_search(float latitude, float longitude, float distance,
   }
   zim::Searcher searcher(archives);
   zim::Query query;
-  query.setVerbose(verbose);
-  query.setQuery("", false);
+  query.setQuery("");
   query.setGeorange(latitude, longitude, distance);
   zim::Search search = searcher.search(query);
   internal.reset(new SearcherInternal(search.getResults(resultStart, maxResultCount)));
@@ -216,8 +214,7 @@ void Searcher::suggestions(std::string& searchPattern, const bool verbose)
   }
   zim::Searcher searcher(archives);
   zim::Query query;
-  query.setVerbose(verbose);
-  query.setQuery(unaccentedSearch, true);
+  query.setQuery(unaccentedSearch);
   zim::Search search = searcher.search(query);
   internal.reset(new SearcherInternal(search.getResults(resultStart, maxResultCount)));
   this->estimatedResultCount = search.getEstimatedMatches();
diff --git a/src/server/internalServer.cpp b/src/server/internalServer.cpp
index cd708a1..ce3a566 100644
--- a/src/server/internalServer.cpp
+++ b/src/server/internalServer.cpp
@@ -350,7 +350,7 @@ SuggestionsList_t getSuggestions(const zim::Archive* const archive,
   if (archive->hasTitleIndex()) {
     auto searcher = zim::Searcher(*archive);
     zim::Query suggestionQuery;
-    suggestionQuery.setQuery(queryString, true);
+    suggestionQuery.setQuery(queryString);
     auto suggestionSearch = searcher.search(suggestionQuery);
     auto suggestionResult = suggestionSearch.getResults(0, suggestionCount);
 
@@ -610,8 +610,7 @@ std::unique_ptr<Response> InternalServer::handle_search(const RequestContext& re
         cout << "Performing geo query `" << distance << "&(" << latitude << ";" << longitude << ")'" << endl;
       }
 
-      query.setVerbose(m_verbose.load());
-      query.setQuery("", false);
+      query.setQuery("");
       query.setGeorange(latitude, longitude, distance);
     } else {
       // Execute Ft search
@@ -620,8 +619,7 @@ std::unique_ptr<Response> InternalServer::handle_search(const RequestContext& re
       }
 
       std::string queryString = removeAccents(patternString);
-      query.setQuery(queryString, false);
-      query.setVerbose(m_verbose.load());
+      query.setQuery(queryString);
     }
 
     zim::Search search = searcher->search(query);
diff --git a/test/searcher.cpp b/test/searcher.cpp
index d89523b..da4a5e7 100644
--- a/test/searcher.cpp
+++ b/test/searcher.cpp
@@ -27,7 +27,7 @@ TEST(Searcher, incrementalRange) {
   zim::Archive archive("./test/zimfile.zim");
   zim::Searcher ftsearcher(archive);
   zim::Query query;
-  query.setQuery("ray", false);
+  query.setQuery("ray");
   auto search = ftsearcher.search(query);
 
   int suggCount = 0;
@@ -39,4 +39,4 @@ TEST(Searcher, incrementalRange) {
   ASSERT_EQ(suggCount, 50);
 }
 
-}
\ No newline at end of file
+}
